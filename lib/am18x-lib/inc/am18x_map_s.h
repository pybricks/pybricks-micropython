#define __AM18X_MAP_H__
#define _EXTERN		extern
#define _RS(b,a)	(((b) - (a) - 0x4) >> 2)
#define MPU1_PROGxMPxAR_MASK		0xFFFFFC00
#define MPU2_PROGxMPxAR_MASK		0xFFFF0000
#define PROGxMPPA_AIDn_MASK(n)		(0x1 << (10 + (n)))
#define PROGxMPPA_AIDn_denied(n)	(0x0 << (10 + (n)))
#define PROGxMPPA_AIDn_granted(n)	(0x1 << (10 + (n)))
#define MPU_REVID			0x4E810101
#define CONFIG_ADDR_WIDTH_MASK		(0xFF << 24)
#define CONFIG_NUM_FIXED_MASK		(0xF << 20)
#define CONFIG_NUM_PROG_MASK		(0xF << 16)
#define CONFIG_NUM_AIDS_MASK		(0xF << 12)
#define CONFIG_ASSUME_ALLOWED_MASK	(0x1 << 0)
#define CONFIG_ASSUME_ALLOWED_no	(0x0 << 0)
#define CONFIG_ASSUME_ALLOWED_yes	(0x1 << 0)
#define FXD_MPSAR_VAL			0xB0000000
#define FXD_MPEAR_VAL			0xB0007FFF
#define FLTSTAT_MSTID_MASK		(0xFF << 16)
#define FLTSTAT_PRIVID_MASK		(0xF << 9)
#define FLTSTAT_TYPE_MASK		(0x3F << 0)
#define FLTSTAT_TYPE_NoFault		(0x0 << 0)
#define FLTSTAT_TYPE_UserExecute	(0x1 << 0)
#define FLTSTAT_TYPE_UserWrite		(0x2 << 0)
#define FLTSTAT_TYPE_UserRead		(0x4 << 0)
#define FLTSTAT_TYPE_SupervisorExecute	(0x8 << 0)
#define FLTSTAT_TYPE_SupervisorWrite	(0x10 << 0)
#define FLTSTAT_TYPE_CacheWriteBack	(0x12 << 0)
#define FLTSTAT_TYPE_SupervisorRead	(0x20 << 0)
#define FLTSTAT_TYPE_CacheLineFill	(0x3F << 0)
#define PLL0_REVID			0x44813C00
#define PLL1_REVID			0x44814400
#define RSTYPE_PLLSWRST_MASK		(0x1 << 2)
#define RSTYPE_PLLSWRST_no		(0x0 << 2)
#define RSTYPE_PLLSWRST_yes		(0x1 << 2)
#define RSTYPE_XWRST_MASK		(0x1 << 1)
#define RSTYPE_XWRST_no			(0x0 << 1)
#define RSTYPE_XWRST_yes		(0x1 << 1)
#define RSTYPE_POR_MASK			(0x1 << 0)
#define RSTYPE_POR_no			(0x0 << 0)
#define RSTYPE_POR_yes			(0x1 << 0)
#define RSCTRL_SWRST_MASK		(0x1 << 16)
#define RSCTRL_SWRST_yes		(0x0 << 16)
#define RSCTRL_SWRST_no			(0x1 << 16)
#define RSCTRL_KEY_MASK			(0xFFFF << 0)
#define RSCTRL_KEY_locked		(0x3 << 0)
#define RSCTRL_KEY_unlocked		(0xC << 0)
#define RSCTRL_KEY_unlock		(0x5A69 << 0)
#define PLLCTL_EXTCLKSRC_MASK		(0x1 << 9)
#define PLLCTL_EXTCLKSRC_oscin		(0x0 << 9)
#define PLLCTL_EXTCLKSRC_PLL1sysclk3	(0x1 << 9)
#define PLLCTL_CLKMODE_MASK		(0x1 << 8)
#define PLLCTL_CLKMODE_crystal		(0x0 << 8)
#define PLLCTL_CLKMODE_wave		(0x1 << 8)
#define PLLCTL_PLLENSRC_MASK		(0x1 << 5)
#define PLLCTL_PLLENSRC_cleared		(0x0 << 5)
#define PLLCTL_PLLENSRC_none		(0x1 << 5)
#define PLLCTL_PLLRST_MASK		(0x1 << 3)
#define PLLCTL_PLLRST_asserted		(0x0 << 3)
#define PLLCTL_PLLRST_deasserted	(0x1 << 3)
#define PLLCTL_PLLPWRDN_MASK		(0x1 << 1)
#define PLLCTL_PLLPWRDN_no		(0x0 << 1)
#define PLLCTL_PLLPWRDN_yes		(0x1 << 1)
#define PLLCTL_PLLEN_MASK		(0x1 << 0)
#define PLLCTL_PLLEN_no			(0x0 << 0)
#define PLLCTL_PLLEN_yes		(0x1 << 0)
#define OCSEL_OCSRC_MASK		(0x1F << 0)
#define OCSEL_OCSRC_oscin		(0x14 << 0)
#define OCSEL_OCSRC_PLLsysclkx(x)	((0x16 + (x)) << 0)
#define OCSEL_OCSRC_PLL1obsclk		(0x1E << 0)
#define OCSEL_OCSRC_Disabled		(0x1F << 0)
#define PLLM_MASK			(0x1F << 0)
#define PLLM_WR(m)			(((m) - 0x1) << 0)
#define XXXDIVx_DxEN_MASK		(0x1 << 15)
#define XXXDIVx_DxEN_disable		(0x0 << 15)
#define XXXDIVx_DxEN_enable		(0x1 << 15)
#define XXXDIVx_RATIO_MASK		(0x1F << 0)
#define XXXDIVx_RATIO_WR(r)		(((r) - 0x1) << 0)
#define PLLDIVxA_IDX_1			0x0
#define PLLDIVxA_IDX_2			0x1
#define PLLDIVxA_IDX_3			0x2
#define PLLCMD_GOSET_MASK		(0x1 << 0)
#define PLLCMD_GOSET_clear		(0x0 << 0)
#define PLLCMD_GOSET_initiate		(0x1 << 0)
#define PLLSTAT_STABLE_MASK		(0x1 << 2)
#define PLLSTAT_STABLE_no		(0x0 << 2)
#define PLLSTAT_STABLE_yes		(0x1 << 2)
#define PLLSTAT_GOSTAT_MASK		(0x1 << 0)
#define PLLSTAT_GOSTAT_done		(0x0 << 0)
#define PLLSTAT_GOSTAT_in_progress	(0x1 << 0)
#define ALNCTL_ALNx_MASK(x)		(0x1 << ((x) - 1))
#define ALNCTL_ALNx_no(x)		(0x0 << ((x) - 1))
#define ALNCTL_ALNx_yes(x)		(0x1 << ((x) - 1))
#define DCHANGE_SYSx_MASK(x)		(0x1 << ((x) - 1))
#define DCHANGE_SYSx_none(x)		(0x0 << ((x) - 1))
#define DCHANGE_SYSx_modified(x)	(0x1 << ((x) - 1))
#define CKEN_OBSEN_MASK			(0x1 << 1)
#define CKEN_OBSEN_disable		(0x0 << 1)
#define CKEN_OBSEN_enable		(0x1 << 1)
#define CKEN_AUXEN_MASK			(0x1 << 0)
#define CKEN_AUXEN_disable		(0x0 << 0)
#define CKEN_AUXEN_enable		(0x1 << 0)
#define CKSTAT_OBSEN_MASK		(0x1 << 1)
#define CKSTAT_OBSEN_off		(0x0 << 1)
#define CKSTAT_OBSEN_on			(0x1 << 1)
#define CKSTAT_AUXEN_MASK		(0x1 << 0)
#define CKSTAT_AUXEN_off		(0x0 << 0)
#define CKSTAT_AUXEN_on			(0x1 << 0)
#define SYSTAT_SYSxON_MASK(X)		(0x1 << ((x) - 1))
#define SYSTAT_SYSxON_off(x)		(0x0 << ((x) - 1))
#define SYSTAT_SYSxON_on(x)		(0x1 << ((x) - 1))
#define PLLDIVxB_IDX_4			0x0
#define PLLDIVxB_IDX_5			0x1
#define PLLDIVxB_IDX_6			0x2
#define PLLDIVxB_IDX_7			0x3
#define MODULE_NR_PER_PSC	32
#define PSC_REVID			0x44825A00
#define PTCMD_GO1			(0x1 << 1)
#define PTCMD_GO0			(0x1 << 0)
#define PTSTAT_GO1_MASK			(0x1 << 1)
#define PTSTAT_GO1_no			(0x0 << 1)
#define PTSTAT_GO1_yes			(0x1 << 1)
#define PTSTAT_GO0_MASK			(0x1 << 0)
#define PTSTAT_GO0_no			(0x0 << 0)
#define PTSTAT_GO0_yes			(0x1 << 0)
#define PDSTATx_EMUIHB_MASK		(0x1 << 11)
#define PDSTATx_EMUIHB_unactive		(0x0 << 11)
#define PDSTATx_EMUIHB_active		(0x1 << 11)
#define PDSTATx_PORDONE_MASK		(0x1 << 9)
#define PDSTATx_PORDONE_no		(0x0 << 9)
#define PDSTATx_PORDONE_yes		(0x1 << 9)
#define PDSTATx_POR_MASK		(0x1 << 8)
#define PDSTATx_POR_asserted		(0x0 << 8)
#define PDSTATx_POR_deasserted		(0x1 << 8)
#define PDSTATx_STATE_MASK		(0x1F << 0)
#define PDSTATx_STATE_off		(0x0 << 0)
#define PDSTATx_STATE_on		(0x1 << 0)
#define PDSTATx_STATE_in_transition(x)	(0x10 <= (x) && (x) <= 0x1A)
#define PDCTLx_WAKECNT_MASK		(0xFF << 16)
#define PDCTLx_GOOD2ACCESS_MASK		(0xF << 20)
#define PDCTLx_ON2GOOD_MASK		(0xF << 16)
#define PDCTLx_PDMODE_MASK		(0xF << 12)
#define PDCTLx_PDMODE_on		(0xF << 12)
#define PDCTLx_EMUIHBIE_MASK		(0x1 << 9)
#define PDCTLx_EMUIHBIE_disable		(0x0 << 9)
#define PDCTLx_EMUIHBIE_enable		(0x1 << 9)
#define PDCTLx_NEXT_MASK		(0x1 << 0)
#define PDCTLx_NEXT_off			(0x0 << 0)
#define PDCTLx_NEXT_on			(0x1 << 0)
#define PDCFGx_PD_LOCK_MASK		(0x1 << 3)
#define PDCFGx_PD_LOCK_locked		(0x0 << 3)
#define PDCFGx_PD_LOCK_unlocked		(0x1 << 3)
#define PDCFGx_ICEPICK_MASK		(0x1 << 2)
#define PDCFGx_ICEPICK_unpresent	(0x0 << 2)
#define PDCFGx_ICEPICK_present		(0x1 << 2)
#define PDCFGx_RAM_PSM_MASK		(0x1 << 1)
#define PDCFGx_RAM_PSM_no		(0x0 << 1)
#define PDCFGx_RAM_PSM_yes		(0x1 << 1)
#define PDCFGx_ALWAYSON_MASK		(0x1 << 0)
#define PDCFGx_ALWAYSON_no		(0x0 << 0)
#define PDCFGx_ALWAYSON_yes		(0x1 << 0)
#define MDSTATx_EMUIHB_MASK		(0x1 << 17)
#define MDSTATx_EMUIHB_no		(0x0 << 17)
#define MDSTATx_EMUIHB_yes		(0x1 << 17)
#define MDSTATx_EMURST_MASK		(0x1 << 16)
#define MDSTATx_EMURST_no		(0x0 << 16)
#define MDSTATx_EMURST_yes		(0x1 << 16)
#define MDSTATx_MCKOUT_MASK		(0x1 << 12)
#define MDSTATx_MCKOUT_off		(0x0 << 12)
#define MDSTATx_MCKOUT_on		(0x1 << 12)
#define MDSTATx_MRST_MASK		(0x1 << 10)
#define MDSTATx_MRST_asserted		(0x0 << 10)
#define MDSTATx_MRST_deasserted		(0x1 << 10)
#define MDSTATx_LRSTDONE_MASK		(0x1 << 9)
#define MDSTATx_LRSTDONE_yes		(0x0 << 9)
#define MDSTATx_LRSTDONE_no		(0x1 << 9)
#define MDSTATx_LRST_MASK		(0x1 << 8)
#define MDSTATx_LRST_asserted		(0x0 << 8)
#define MDSTATx_LRST_deasserted		(0x1 << 8)
#define MDSTATx_STATE_MASK		(0x3F << 0)
#define MDSTATx_STATE_SwRstDisable	(0x0)
#define MDSTATx_STATE_SyncReset		(0x1)
#define MDSTATx_STATE_Disable		(0x2)
#define MDSTATx_STATE_Enable		(0x3)
#define MDSTATx_STATE_in_transition(x)	(0x4 <= (x) && (x) <= 0x3F)
#define MDCTLx_FORCE_MASK		(0x1 << 31)
#define MDCTLx_FORCE_disabled		(0x0 << 31)
#define MDCTLx_FORCE_enabled		(0x1 << 31)
#define MDCTLx_EMUIHBIE_MASK		(0x1 << 10)
#define MDCTLx_EMUIHBIE_disable		(0x0 << 10)
#define MDCTLx_EMUIHBIE_enable		(0x1 << 10)
#define MDCTLx_EMURSTIE_MASK		(0x1 << 9)
#define MDCTLx_EMURSTIE_disable		(0x0 << 9)
#define MDCTLx_EMURSTIE_enable		(0x1 << 9)
#define MDCTLx_LRST_MASK		(0x1 << 8)
#define MDCTLx_LRST_assert		(0x0 << 8)
#define MDCTLx_LRST_deassert		(0x1 << 8)
#define MDCTLx_STATE_MASK		(0x7 << 0)
#define MDCTLx_STATE_SwRstDisable	(0x0 << 0)
#define MDCTLx_STATE_SyncReset		(0x1 << 0)
#define MDCTLx_STATE_Disable		(0x2 << 0)
#define MDCTLx_STATE_Enable		(0x3 << 0)
#define SYSCFG0_REVID			0x4E840102
#define BOOTCFG_BOOTMODE_MASK		0x001F
#define BOOTCFG_BOOTMODE_I2C0EEPROM	0x00
#define BOOTCFG_BOOTMODE_I2C0SLAVE	0x01
#define BOOTCFG_BOOTMODE_NOR		0x02
#define BOOTCFG_BOOTMODE_HPI		0x04
#define BOOTCFG_BOOTMODE_I2C1EEPROM	0x06
#define BOOTCFG_BOOTMODE_I2C1SLAVE	0x07
#define BOOTCFG_BOOTMODE_SPI0EEPROM	0x08
#define BOOTCFG_BOOTMODE_SPI1EEPROM	0x09
#define BOOTCFG_BOOTMODE_SPI0FLASH	0x0A
#define BOOTCFG_BOOTMODE_SPI1FLASH	0x0C
#define BOOTCFG_BOOTMODE_NAND8		0x0E
#define BOOTCFG_BOOTMODE_NAND16		0x10
#define BOOTCFG_BOOTMODE_SPI0SLAVE	0x12
#define BOOTCFG_BOOTMODE_SPI1SLAVE	0x13
#define BOOTCFG_BOOTMODE_UART2		0x14
#define BOOTCFG_BOOTMODE_UART0		0x16
#define BOOTCFG_BOOTMODE_UART1		0x17
#define BOOTCFG_BOOTMODE_MMCSD0		0x1C
#define BOOTCFG_BOOTMODE_EMU		0x1E
#define KICK0R_UNLOCK			0x83E70B13
#define KICK0R_LOCK			0x00000000
#define KICK1R_UNLOCK			0x95A4F1E0
#define KICK1R_LOCK			0x00000000
#define HOST0CFG_BOOTRDY_MASK		(0x1 << 0)
#define HOST0CFG_BOOTRDY_reset		(0x0 << 0)
#define HOST0CFG_BOOTRDY_released	(0x1 << 0)
#define IRAWSTAT_ADDRERR_MASK		(0x1 << 1)
#define IRAWSTAT_ADDRERR_unset		(0x0 << 1)
#define IRAWSTAT_ADDRERR_set		(0x1 << 1)
#define IRAWSTAT_PROTERR_MASK		(0x1 << 0)
#define IRAWSTAT_PROTERR_unset		(0x0 << 0)
#define IRAWSTAT_PROTERR_set		(0x1 << 0)
#define IENSTAT_ADDRERR_MASK		(0x1 << 1)
#define IENSTAT_ADDRERR_unset		(0x0 << 1)
#define IENSTAT_ADDRERR_set		(0x1 << 1)
#define IENSTAT_PROTERR_MASK		(0x1 << 0)
#define IENSTAT_PROTERR_unset		(0x0 << 0)
#define IENSTAT_PROTERR_set		(0x1 << 0)
#define IENSET_ADDRERR_EN_enable	(0x1 << 1)
#define IENSET_PROTERR_EN_enable	(0x1 << 0)
#define IENCLR_ADDRERR_EN_enable	(0x1 << 1)
#define IENCLR_PROTERR_EN_enable	(0x1 << 0)
#define EOI_EOIVECT_MASK		(0xFF << 0)
#define FLTSTAT_ID_MASK			(0xFF << 24)
#define MSTPRIx_IDX(x)			((x) >> 3)
#define MSTPRIx_MASK(x)			(0x7 << (((x) & 0x7) << 2))
#define CHIPSIG_X_MASK(i)		(0x1 << (i))
#define CHIPSIG_X_assert(i)		(0x1 << (i))
#define CHIPSIG_X_clear(i)		(0x1 << (i))
#define CFGCHIP0_PLL_MASTER_LOCK_MASK	(0x1 << 4)
#define CFGCHIP0_PLL_MASTER_LOCK_no	(0x0 << 4)
#define CFGCHIP0_PLL_MASTER_LOCK_yes	(0x1 << 4)
#define CFGCHIP0_EDMA30TCxDBS_MASK(x)	(0x3 << (2*(x)))
#define CFGCHIP0_EDMA30TCxDBS_16B(x)	(0x0 << (2*(x)))
#define CFGCHIP0_EDMA30TCxDBS_32B(x)	(0x1 << (2*(x)))
#define CFGCHIP0_EDMA30TCxDBS_64B(x)	(0x2 << (2*(x)))
#define CFGCHIP1_EDMA31TC0DBS_MASK	(0x3 << 13)
#define CFGCHIP1_EDMA31TC0DBS_16B	(0x0 << 13)
#define CFGCHIP1_EDMA31TC0DBS_32B	(0x1 << 13)
#define CFGCHIP1_EDMA31TC0DBS_64B	(0x2 << 13)
#define CFGCHIP2_USB0OTGMODE_MASK	(0x3 << 13)
#define CFGCHIP2_USB0OTGMODE_none	(0x0 << 13)
#define CFGCHIP2_USB0OTGMODE_host	(0x1 << 13)
#define CFGCHIP2_USB0OTGMODE_device	(0x2 << 13)
#define CFGCHIP2_USB0OTGMODE_VBUSlow	(0x3 << 13)
#define CFGCHIP2_USB0REFFREQ_MASK	(0xF << 0)
#define CFGCHIP2_USB0REFFREQ_12MHz	(0x1 << 0)
#define CFGCHIP2_USB0REFFREQ_24MHz	(0x2 << 0)
#define CFGCHIP2_USB0REFFREQ_48MHz	(0x3 << 0)
#define CFGCHIP2_USB0REFFREQ_19_2MHz	(0x4 << 0)
#define CFGCHIP2_USB0REFFREQ_38_4MHz	(0x5 << 0)
#define CFGCHIP2_USB0REFFREQ_13MHz	(0x6 << 0)
#define CFGCHIP2_USB0REFFREQ_26MHz	(0x7 << 0)
#define CFGCHIP2_USB0REFFREQ_20MHz	(0x8 << 0)
#define CFGCHIP2_USB0REFFREQ_40MHz	(0x9 << 0)
#define CFGCHIP3_RMII_SEL_MASK		(0x1 << 8)
#define CFGCHIP3_RMII_SEL_mii		(0x0 << 8)
#define CFGCHIP3_RMII_SEL_rmii		(0x1 << 8)
#define CFGCHIP3_UPP_TX_CLKSRC_MASK	(0x1 << 6)
#define CFGCHIP3_UPP_TX_CLKSRC_asyn3	(0x0 << 6)
#define CFGCHIP3_UPP_TX_CLKSRC_2xTXCLK	(0x1 << 6)
#define CFGCHIP3_PLL1_MASTER_LOCK_MASK	(0x1 << 5)
#define CFGCHIP3_PLL1_MASTER_LOCK_no	(0x0 << 5)
#define CFGCHIP3_PLL1_MASTER_LOCK_yes	(0x1 << 5)
#define CFGCHIP3_ASYNC3_CLKSRC_MASK	(0x1 << 4)
#define CFGCHIP3_ASYNC3_CLKSRC_pll0	(0x0 << 4)
#define CFGCHIP3_ASYNC3_CLKSRC_pll1	(0x1 << 4)
#define CFGCHIP3_PRUEVTSEL_MASK		(0x1 << 3)
#define CFGCHIP3_PRUEVTSEL_normal	(0x0 << 3)
#define CFGCHIP3_PRUEVTSEL_alternate	(0x1 << 3)
#define CFGCHIP3_DIV45PENA_MASK		(0x1 << 2)
#define CFGCHIP3_DIV45PENA_no		(0x0 << 2)
#define CFGCHIP3_DIV45PENA_yes		(0x1 << 2)
#define CFGCHIP3_EMA_CLKSRC_MASK	(0x1 << 1)
#define CFGCHIP3_EMA_CLKSRC_sysclk3	(0x0 << 1)
#define CFGCHIP3_EMA_CLKSRC_pll_out	(0x1 << 1)
#define CFGCHIP4_AMUTECLR0_MASK		(0x1 << 0)
#define CFGCHIP4_AMUTECLR0_none		(0x0 << 0)
#define CFGCHIP4_AMUTECLR0_clr_int	(0x1 << 0)
#define CFGCHIP1_EDMA31TC0DBS_MASK	(0x3 << 13)
#define CFGCHIP1_EDMA31TC0DBS_16B	(0x0 << 13)
#define CFGCHIP1_EDMA31TC0DBS_32B	(0x1 << 13)
#define CFGCHIP1_EDMA31TC0DBS_64B	(0x2 << 13)
#define VTPIO_CTL_F_MASK		(0x7 << 0)
#define VTPIO_CTL_F_Enable		(0x7 << 0)
#define VTPIO_CTL_D_MASK		(0x7 << 3)
#define VTPIO_CTL_D_100PS		(0x6 << 3)
#define VTPIO_CTL_VREFTAP_MASK		(0x3 << 16)
#define VTPIO_CTL_VREFTAP_50PS		(0x0 << 16)
#define DEEPSLEEP_SLEEPCOUNT_MASK	(0xFFFF << 0)
#define DEEPSLEEP_SLEEPCOUNT_VAL(x)	(((x) & 0xFFFF) << 0)
#define CR_PRHOLDMODE_MASK		(0x1 << 4)
#define CR_PRHOLDMODE_disable		(0x0 << 4)
#define CR_PRHOLDMODE_enable		(0x1 << 4)
#define CR_NESTMODE_MASK		(0x3 << 2)
#define CR_NESTMODE_None		(0x0 << 2)
#define CR_NESTMODE_Individual		(0x1 << 2)
#define CR_NESTMODE_Global		(0x2 << 2)
#define CR_NESTMODE_Manual		(0x3 << 2)
#define GER_ENABLE_MASK			(0x1 << 0)
#define GER_ENABLE_no			(0x0 << 0)
#define GER_ENABLE_yes			(0x1 << 0)
#define GNLR_OVERRIDE_SET		(0x1 << 31)
#define GNLR_NESTLVL_MASK		(0xFF << 0)
#define GNLR_NESTLVL_VAL(x)		((x) << 0)
#define AINTC_IDX_SET			0x00
#define AINTC_IDX_CLR			0x01
#define XIxR_INDEX_MASK			(0x7F << 0)
#define XIxR_INDEX_VAL(x)		((x) << 0)
#define HIEIxR_INDEX_MASK		(0x1 << 0)
#define HIEIxR_INDEX_FIQ		(0x0 << 0)
#define HIEIxR_INDEX_IRQ		(0x1 << 0)
#define VSR_SIZE_MASK			(0xFF << 0)
#define VSR_SIZE_VAL(x)			(((x) >> 2) - 1)
#define GPIR_NONE_MASK			(0x1 << 31)
#define GPIR_NONE_no			(0x0 << 31)
#define GPIR_NONE_yes			(0x1 << 31)
#define GPIR_PRI_INDX_MASK		(0x3FF << 0)
#define SXXRx_WR_X(x)			((x) >> 5)
#define SXXRx_WR_VAL(x)			(0x1 << ((x) & 0x1F))
#define EXRx_WR_X(x)			((x) >> 5)
#define EXRx_WR_VAL(x)			(0x1 << ((x) & 0x1F))
#define CMRx_X(x)			((x) >> 2)
#define CMRx_MASK(x)			(0xFF << (((x) & 0x3) << 3))
#define CMRx_VAL(x,v)			((0xFF & (v)) << (((x) & 0x3) << 3))
#define AINTC_IDX_FIQ			0x00
#define AINTC_IDX_IRQ			0x01
#define HIPIRx_NONE_MASK		(0x1 << 31)
#define HIPIRx_NONE_no			(0x0 << 31)
#define HIPIRx_NONE_yes			(0x1 << 31)
#define HIPIRx_PRI_INDX_MASK		(0x3FF << 0)
#define HINLRx_OVERRIDE_SET		(0x1 << 31)
#define HINLRx_NEST_LVL_MASK		(0x1FF << 0)
#define HIER_IRQ_MASK			(0x1 << 1)
#define HIER_IRQ_disabled		(0x0 << 1)
#define HIER_IRQ_enabled		(0x1 << 1)
#define HIER_FIQ_MASK			(0x1 << 0)
#define HIER_FIQ_disabled		(0x0 << 0)
#define HIER_FIQ_enabled		(0x1 << 0)
#define CONTROL_PCRESETVAL_MASK		(0xFFFF << 16)
#define STATUS_PCOUNTER_MASK		0x0000FFFF
#define WAKEUP_ENABLES_MASK(x)		(0x1 << (x))
#define WAKEUP_ENABLES_no(x)		(0x0 << (x))
#define WAKEUP_ENABLES_yes(x)		(0x1 << (x))
#define CONTABBLKIDX0_C25_MASK		(0xF << 16)
#define CONTABBLKIDX0_C24_MASK		(0xF << 0)
#define CONTABPROPTR_C29_MASK		(0xFFFF << 16)
#define CONTABPROPTR_C28_MASK		(0xFFFF << 0)
#define CONTABPROPTR_C31_MASK		(0xFFFF << 16)
#define CONTABPROPTR_C30_MASK		(0xFFFF << 0)
#define DDR0_REVID			(0x40311B1F)
#define SDCR_DDR2TERM_MASK		((0x1 << 27) | (0x1 << 21))
#define SDCR_DDR2TERM_disable		(0x0)
#define SDCR_DDR2TERM_default		(0x1 << 27)
#define SDCR_DDRDRIVE_MASK		((0x1 << 24) | (0x1 << 18))
#define SDCR_DDRDRIVE_full		((0x0 << 24) | (0x0 << 18))
#define SDCR_DDRDRIVE_half		((0x0 << 24) | (0x1 << 18))
#define SDCR_DDRDRIVE_quarter		((0x1 << 24) | (0x0 << 18))
#define SDCR_DDRDRIVE_3quarter		((0x1 << 24) | (0x1 << 18))
#define SDCR_CL_MASK			(0x7 << 9)
#define SDCR_CL_VAL(x)			((x) << 9)
#define SDCR_IBANK_MASK			(0x7 << 4)
#define SDCR_IBANK_1bank		(0x0 << 4)
#define SDCR_IBANK_2banks		(0x1 << 4)
#define SDCR_IBANK_4banks		(0x2 << 4)
#define SDCR_IBANK_8banks		(0x3 << 4)
#define SDCR_PAGESIZE_MASK		(0x7 << 0)
#define SDCR_PAGESIZE_256w8col		(0x0 << 0)
#define SDCR_PAGESIZE_512w9col		(0x1 << 0)
#define SDCR_PAGESIZE_1kw10col		(0x2 << 0)
#define SDCR_PAGESIZE_2kw11col		(0x3 << 0)
#define SDRCR_RR_MASK			(0xFFFF << 0)
#define SDRCR_RR_VAL(x)			((x) << 0)
#define SDTIMR1_TRFC_MASK		(0x7 << 25)
#define SDTIMR1_TRFC_VAL(x)		((x) << 25)
#define SDTIMR1_TRP_MASK		(0x7 << 22)
#define SDTIMR1_TRP_VAL(x)		((x) << 22)
#define SDTIMR1_TRCD_MASK		(0x7 << 19)
#define SDTIMR1_TRCD_VAL(x)		((x) << 19)
#define SDTIMR1_TWR_MASK		(0x7 << 16)
#define SDTIMR1_TWR_VAL(x)		((x) << 16)
#define SDTIMR1_TRAS_MASK		(0x1F << 11)
#define SDTIMR1_TRAS_VAL(x)		((x) << 11)
#define SDTIMR1_TRC_MASK		(0x1F << 6)
#define SDTIMR1_TRC_VAL(x)		((x) << 6)
#define SDTIMR1_TRRD_MASK		(0x7 << 3)
#define SDTIMR1_TRRD_VAL(x)		((x) << 3)
#define SDTIMR1_TWTR_MASK		(0x3 << 0)
#define SDTIMR1_TWTR_VAL(x)		((x) << 0)
#define SDTIMR2_TRASMAX_MASK		(0xF << 27)
#define SDTIMR2_TRASMAX_VAL(x)		((x) << 27)
#define SDTIMR2_TXP_MASK		(0x3 << 25)
#define SDTIMR2_TXP_VAL(x)		((x) << 25)
#define SDTIMR2_TODT_MASK		(0x3 << 23)
#define SDTIMR2_TODT_VAL(x)		((x) << 23)
#define SDTIMR2_TXSNR_MASK		(0x7F << 16)
#define SDTIMR2_TXSNR_VAL(x)		((x) << 16)
#define SDTIMR2_TXSRD_MASK		(0xFF << 8)
#define SDTIMR2_TXSRD_VAL(x)		((x) << 8)
#define SDTIMR2_TRTP_MASK		(0x7 << 5)
#define SDTIMR2_TRTP_VAL(x)		((x) << 5)
#define SDTIMR2_TCKE_MASK		(0x1F << 0)
#define SDTIMR2_TCKE_VAL(x)		((x) << 0)
#define SDCR2_PASR_MASK			(0x7 << 16)
#define SDCR2_PASR_4banks		(0x0 << 16)
#define SDCR2_PASR_2banks		(0x1 << 16)
#define SDCR2_PASR_1banks		(0x2 << 16)
#define SDCR2_PASR_half_bank		(0x5 << 16)
#define SDCR2_PASR_quarter_bank		(0x6 << 16)
#define SDCR2_ROWSIZE_MASK		(0x7 << 0)
#define SDCR2_ROWSIZE_VAL(x)		(((x) - 9) << 0)
#define PBBPR_PROLDCOUNT_MASK		(0xFF << 0)
#define PBBPR_PROLDCOUNT_VAL(x)		(((x) - 1) << 0)
#define PCC_CNTR2CFG_MASK		(0xF << 16)
#define PCC_CNTR2CFG_VAL(x)		((x) << 16)
#define PCC_CNTR1CFG_MASK		(0xF << 0)
#define PCC_CNTR1CFG_VAL(x)		((x) << 0)
#define PCMRS_MSTID2_MASK		(0xFF << 24)
#define PCMRS_MSTID2_VAL(x)		((x) << 24)
#define PCMRS_REGIONSEL2_MASK		(0xF << 16)
#define PCMRS_REGIONSEL2_access		(0x0 << 16)
#define PCMRS_REGIONSEL2_register	(0x7 << 16)
#define PCMRS_MSTID1_MASK		(0xFF << 8)
#define PCMRS_MSTID1_VAL(x)		((x) << 8)
#define PCMRS_REGIONSEL1_MASK		(0xF << 0)
#define PCMRS_REGIONSEL1_access		(0x0 << 0)
#define PCMRS_REGIONSEL1_register	(0x7 << 0)
#define DRPYC1R_RL_MASK			(0x7 << 0)
#define DRPYC1R_RL_VAL(x)		((x) << 0)
#define ECCTL1_FREESOFT_MASK		(0x3 << 14)
#define ECCTL1_FREESOFT_stop		(0x0 << 14)
#define ECCTL1_FREESOFT_runs		(0x1 << 14)
#define ECCTL1_FREESOFT_none		(0x3 << 14)
#define ECCTL1_PRESCALE_MASK		(0x1F << 9)
#define ECCTL1_PRESCALE_VAL(x)		(((x) & 0x3E) << 8)
#define ECCTL1_CTRRSTx_MASK(x)		(0x1 << (((x) << 1) + 1))
#define ECCTL1_CTRRSTx_none(x)		(0x0 << (((x) << 1) + 1))
#define ECCTL1_CTRRSTx_reset(x)		(0x1 << (((x) << 1) + 1))
#define ECCTL1_CTRPOLx_MASK(x)		(0x1 << (((x) << 1) + 0))
#define ECCTL1_CTRPOLx_rising(x)	(0x0 << (((x) << 1) + 0))
#define ECCTL1_CTRPOLx_falling(x)	(0x1 << (((x) << 1) + 0))
#define ECCTL2_SYNCO_SEL_MASK		(0x3 << 6)
#define ECCTL2_SYNCO_SEL_pass		(0x0 << 6)
#define ECCTL2_SYNCO_SEL_ctr_equ_prd	(0x1 << 6)
#define ECCTL2_SYNCO_SEL_disable	(0x2 << 6)
#define ECCTL2_STOP_WARP_MASK		(0x3 << 1)
#define ECCTL2_STOP_WARP_VAL(x)		((x) << 1)
#define ECINT_MASK(x)			(0x1 << (x))
#define ECINT_deassert(x)		(0x0 << (x))
#define ECINT_assert(x)			(0x1 << (x))
#define ECAP_REVID			0x44D22100
#define OPT_PRIVID_MASK			(0xF << 24)
#define OPT_PRIVID_X(x)			(((x) & 0xF) << 24)
#define OPT_TCC_MASK			(0x3F << 12)
#define OPT_TCC_X(x)			(((x) & 0x3F) << 12)
#define OPT_FWID_MASK			(0x7 << 8)
#define OPT_FWID_8b			(0x0 << 8)
#define OPT_FWID_16b			(0x1 << 8)
#define OPT_FWID_32b			(0x2 << 8)
#define OPT_FWID_64b			(0x3 << 8)
#define OPT_FWID_128b			(0x4 << 8)
#define OPT_FWID_256b			(0x5 << 8)
#define OPT_PRI_MASK			(0x7 << 4)
#define PARAM_BCNT_MASK			(0xFFFF << 16)
#define PARAM_ACNT_MASK			(0xFFFF << 0)
#define PARAM_DSTBIDX_MASK		(0xFFFF << 16)
#define PARAM_SRCBIDX_MASK		(0xFFFF << 0)
#define PARAM_BCNTRLD_MASK		(0xFFFF << 16)
#define PARAM_LINK_MASK			(0xFFFF << 0)
#define PARAM_DSTCIDX_MASK		(0xFFFF << 16)
#define PARAM_SRCCIDX_MASK		(0xFFFF << 0)
#define PARAM_CCNT_MASK			(0xFFFF << 0)
#define ExR_En_MASK(n)			(0x1 << (n))
#define ExR_En_none(n)			(0x0 << (n))
#define ExR_En_asserted(n)		(0x1 << (n))
#define ExR_En_clear(n)			(0x1 << (n))
#define ExR_En_set(n)			(0x1 << (n))
#define CER_En_MASK(n)			(0x1 << (n))
#define CER_En_none(n)			(0x0 << (n))
#define CER_En_prioritized(n)		(0x1 << (n))
#define EExR_En_MASK(n)			(0x1 << (n))
#define EExR_En_no(n)			(0x0 << (n))
#define EExR_En_yes(n)			(0x1 << (n))
#define EExR_En_clear(n)		(0x1 << (n))
#define EExR_En_set(n)			(0x1 << (n))
#define SExR_En_MASK(n)			(0x1 << (n))
#define SExR_En_none(n)			(0x0 << (n))
#define SExR_En_stored(n)		(0x1 << (n))
#define SExR_En_clear(n)		(0x1 << (n))
#define IExR_En_MASK(n)			(0x1 << (n))
#define IExR_En_no(n)			(0x0 << (n))
#define IExR_En_yes(n)			(0x1 << (n))
#define IExR_En_clear(n)		(0x1 << (n))
#define IExR_En_set(n)			(0x1 << (n))
#define IxR_En_MASK(n)			(0x1 << (n))
#define IxR_En_none(n)			(0x0 << (n))
#define IxR_En_pending(n)		(0x1 << (n))
#define IxR_En_clear(n)			(0x1 << (n))
#define QER_En_MASK(n)			(0x1 << (n))
#define QER_En_none(n)			(0x0 << (n))
#define QER_En_prioritized(n)		(0x1 << (n))
#define QEExR_En_MASK(n)		(0x1 << (n))
#define QEExR_En_no(n)			(0x0 << (n))
#define QEExR_En_yes(n)			(0x1 << (n))
#define QEExR_En_clear(n)		(0x1 << (n))
#define QEExR_En_set(n)			(0x1 << (n))
#define QSExR_En_MASK(n)		(0x1 << (n))
#define QSExR_En_none(n)		(0x0 << (n))
#define QSExR_En_stored(n)		(0x1 << (n))
#define QSExR_En_clear(n)		(0x1 << (n))
#define EDMA3CC_REVID			0x40015300
#define CCCFG_NUM_REGN_MASK		(0x3 << 20)
#define CCCFG_NUM_EVQUE_MASK		(0x7 << 16)
#define CCCFG_NUM_PAENTRY_MASK		(0x7 << 12)
#define CCCFG_NUM_INTCH_MASK		(0x7 << 8)
#define CCCFG_NUM_QDMACH_MASK		(0x7 << 4)
#define CCCFG_NUM_DMACH_MASK		(0x7 << 0)
#define QCHMAP_PAENTRY_MASK		(0x7F << 5)
#define QCHMAP_TRWORD_MASK		(0x7 << 2)
#define DMAQNUM_IDX(n)			((n) >> 3)
#define DMAQNUM_En_MASK(n)		(0x7 << (((n) & 0x7) << 2))
#define QDMAQNUM_En_MASK(n)		(0x7 << (((n) & 0x7) << 2))
#define EMxR_En_MASK(n)			(0x1 << (n))
#define EMxR_En_none(n)			(0x0 << (n))
#define EMxR_En_missed(n)		(0x1 << (n))
#define EMxR_En_clear(n)		(0x1 << (n))
#define QEMxR_En_MASK(n)		(0x1 << (n))
#define QEMxR_En_none(n)		(0x0 << (n))
#define QEMxR_En_missed(n)		(0x1 << (n))
#define QEMxR_En_clear(n)		(0x1 << (n))
#define DRAE_IDX(r)			((r) << 1)
#define DRAE_En_MASK(n)			(0x1 << (n))
#define DRAE_En_none(n)			(0x0 << (n))
#define DRAE_En_allow(n)		(0x1 << (n))
#define QRAE_En_MASK(n)			(0x1 << (n))
#define QRAE_En_none(n)			(0x0 << (n))
#define QRAE_En_allow(n)		(0x1 << (n))
#define QyEx_ETYPE_MASK			(0x3 << 6)
#define QyEx_ETYPE_ER			(0x0 << 6)
#define QyEx_ETYPE_ESR			(0x1 << 6)
#define QyEx_ETYPE_CER			(0x2 << 6)
#define QyEx_ETYPE_QER			(0x3 << 6)
#define QyEx_ENUM_MASK			(0x1F << 0)
#define QSTAT_WM_MASK			(0x1F << 16)
#define QSTAT_WM_isLegal(x)		(0 <= (x) && (x) <= 0x10)
#define QSTAT_NUMVAL_MASK		(0x1F << 8)
#define QSTAT_NUMVAL_isLegal(x)		(0 <= (x) && (x) <= 0x10)
#define QSTAT_STRTPTR_MASK		(0xF << 0)
#define QWMTHRA_Q1_MASK			(0x1F << 8)
#define QWMTHRA_Q0_MASK			(0x1F << 0)
#define CCSTAT_COMPACTV_MASK		(0x3F << 8)
#define PAEntry_CNT			128
#define MPPRXY_PRIVID_MASK		(0xF << 0)
#define EDMA3TC_REVID			0x40003B00
#define TCCFG_DREGDEPTH_MASK		(0x3 << 8)
#define TCCFG_BUSWIDTH_MASK		(0x3 << 4)
#define TCCFG_FIFOSIZE_MASK		(0x7 << 0)
#define TCSTAT_DFSTRTPTR_MASK		(0x3 << 11)
#define TCSTAT_DSTACTV_MASK		(0x7 << 4)
#define ERRDET_TCC_MASK			(0x3F << 8)
#define ERRDET_STAT_MASK		(0xF << 0)
#define ERRDET_STAT_NoError		(0x0 << 0)
#define ERRDET_STAT_ReadAddressing	(0x1 << 0)
#define ERRDET_STAT_ReadPrivilege	(0x2 << 0)
#define ERRDET_STAT_ReadTimeout		(0x3 << 0)
#define ERRDET_STAT_ReadData		(0x4 << 0)
#define ERRDET_STAT_ReadExclusive	(0x7 << 0)
#define ERRDET_STAT_WriteAddressing	(0x9 << 0)
#define ERRDET_STAT_WritePrivilege	(0xA << 0)
#define ERRDET_STAT_WriteTimeout	(0xB << 0)
#define ERRDET_STAT_WriteData		(0xC << 0)
#define ERRDET_STAT_WriteExclusive	(0xF << 0)
#define RDRATE_X_MASK			(0x7 << 0)
#define RDRATE_X_AsFast			(0x0 << 0)
#define RDRATE_X_4cycles		(0x1 << 0)
#define RDRATE_X_8cycles		(0x2 << 0)
#define RDRATE_X_16cycles		(0x3 << 0)
#define RDRATE_X_32cycles		(0x4 << 0)
#define EMACC_REVID			0x4EC80101
#define EMACCINTCTL_CxTXPACEEN_MASK(n)	(0x1 << (17 + ((n) << 1)))
#define EMACCINTCTL_CxTXPACEEN_no(n)	(0x0 << (17 + ((n) << 1)))
#define EMACCINTCTL_CxTXPACEEN_yes(n)	(0x1 << (17 + ((n) << 1)))
#define EMACCINTCTL_CxRXPACEEN_MASK(n)	(0x1 << (16 + ((n) << 1)))
#define EMACCINTCTL_CxRXPACEEN_no(n)	(0x0 << (16 + ((n) << 1)))
#define EMACCINTCTL_CxRXPACEEN_yes(n)	(0x1 << (16 + ((n) << 1)))
#define EMACCINTCTL_PRESCALE_MASK	(0x7FF << 0)
#define EMACCINTCTL_PRESCALE_VAL(x)	(((x) & 0x7FF) << 0)
#define RXTHRESHXX_RXCHx_MASK(n)	(0x1 << (n))
#define RXTHRESHXX_RXCHx_no(n)		(0x0 << (n))
#define RXTHRESHXX_RXCHx_yes(n)		(0x1 << (n))
#define CnRXXX_RXCHx_MASK(n)		(0x1 << (n))
#define CnRXXX_RXCHx_no(n)		(0x0 << (n))
#define CnRXXX_RXCHx_yes(n)		(0x1 << (n))
#define CnTXXX_TXCHx_MASK(n)		(0x1 << (n))
#define CnTXXX_TXCHx_no(n)		(0x0 << (n))
#define CnTXXX_TXCHx_yes(n)		(0x1 << (n))
#define CnRXIMAX_RXIMAX_MASK		(0x3F << 0)
#define CnRXIMAX_RXIMAX_VAL(x)		(((x) & 0x3F) << 0)
#define CnTXIMAX_TXIMAX_MASK		(0x3F << 0)
#define CnTXIMAX_TXIMAX_VAL(x)		(((x) & 0x3F) << 0)
#define MDIO_REVID			(0x00070104)
#define MDIOCTL_CLKDIV_MASK		(0xFFFF << 0)
#define MDIOCTL_CLKDIV_VAL(x)		(((x) & 0xFFFF) << 0)
#define MDIOCTL_HIGHCH_MASK		(0x1F << 24)
#define MDIOCTL_HIGHCH_VAL(x)		(((x) & 0x1F) << 24)
#define MDIO_ALIVE_MASK(n)		(0x1 << (n))
#define MDIO_ALIVE_no(n)		(0x0 << (n))
#define MDIO_ALIVE_ack(n)		(0x1 << (n))
#define MDIO_LINK_MASK(n)		(0x1 << (n))
#define MDIO_LINK_no(n)			(0x0 << (0))
#define MDIO_LINK_yes(n)		(0x1 << (0))
#define USERACCESSx_REGADR_MASK		(0x1F << 21)
#define USERACCESSx_REGADR_VAL(x)	(((x) & 0x1F) << 21)
#define USERACCESSx_PHYADR_MASK		(0x1F << 16)
#define USERACCESSx_PHYADR_VAL(x)	(((x) & 0x1F) << 16)
#define USERACCESSx_DATA_MASK		(0xFFFF << 0)
#define USERACCESSx_DATA_VAL(x)		(((x) & 0xFFFF) << 0)
#define USERPHYSELx_PHYADRMON_MASK	(0x1F << 0)
#define USERPHYSELx_PHYADRMON_VAL(x)	(((x) & 0x1F) << 0)
#define XXX_GPkPj_MASK(j)		(0x1 << (j))
#define DIR_GPkPj_output(j)		(0x0 << (j))
#define DIR_GPkPj_input(j)		(0x1 << (j))
#define OUT_DATA_GPkPj_low(j)		(0x0 << (j))
#define OUT_DATA_GPkPj_high(j)		(0x1 << (j))
#define SET_DATA_GPkPj_none(j)		(0x0 << (j))
#define SET_DATA_GPkPj_high(j)		(0x1 << (j))
#define CLR_DATA_GPkPj_none(j)		(0x0 << (j))
#define CLR_DATA_GPkPj_low(j)		(0x1 << (j))
#define IN_DATA_GPkPj_low(j)		(0x0 << (j))
#define IN_DATA_GPkPj_high(j)		(0x1 << (j))
#define SET_RIS_TRIG_none(j)		(0x0 << (j))
#define SET_RIS_TRIG_enable(j)		(0x1 << (j))
#define CLR_RIS_TRIG_none(j)		(0x0 << (j))
#define CLR_RIS_TRIG_disable(j)		(0x1 << (j))
#define SET_FAL_TRIG_none(j)		(0x0 << (j))
#define SET_FAL_TRIG_disable(j)		(0x1 << (j))
#define CLR_FAL_TRIG_none(j)		(0x0 << (j))
#define CLR_FAL_TRIG_disable(j)		(0x1 << (j))
#define INTSTAT_none(j)			(0x0 << (j))
#define INTSTAT_pending(j)		(0x1 << (j))
#define GPIO_REVID			0x44830105
#define BIT_ENx_MASK(x)			(0x1 << (x))
#define BIT_ENx_no(x)			(0x0 << (x))
#define BIT_ENx_yes(x)			(0x1 << (x))
#define GPIO_BANKS_0_1			0
#define GPIO_BANKS_2_3			1
#define GPIO_BANKS_4_5			2
#define GPIO_BANKS_6_7			3
#define GPIO_BANKS_8			4
#define ICOAR_OADDR_MASK		(0x3FF << 0)
#define ICOAR_OADDR_VAL(x)		((0x3FF & (x)) << 0)
#define ICIMR_AAS_MASK			(0x1 << 6)
#define ICIMR_AAS_disabled		(0x0 << 6)
#define ICIMR_AAS_enabled		(0x1 << 6)
#define ICIMR_SCD_MASK			(0x1 << 5)
#define ICIMR_SCD_disabled		(0x0 << 5)
#define ICIMR_SCD_enabled		(0x1 << 5)
#define ICIMR_ICXRDY_MASK		(0x1 << 4)
#define ICIMR_ICXRDY_disabled		(0x0 << 4)
#define ICIMR_ICXRDY_enabled		(0x1 << 4)
#define ICIMR_ICRRDY_MASK		(0x1 << 3)
#define ICIMR_ICRRDY_disabled		(0x0 << 3)
#define ICIMR_ICRRDY_enabled		(0x1 << 3)
#define ICIMR_ARDY_MASK			(0x1 << 2)
#define ICIMR_ARDY_disabled		(0x0 << 2)
#define ICIMR_ARDY_enabled		(0x1 << 2)
#define ICIMR_NACK_MASK			(0x1 << 1)
#define ICIMR_NACK_disabled		(0x0 << 1)
#define ICIMR_NACK_enabled		(0x1 << 1)
#define ICIMR_AL_MASK			(0x1 << 0)
#define ICIMR_AL_disabled		(0x0 << 0)
#define ICIMR_AL_enabled		(0x1 << 0)
#define ICSTR_SDIR_MASK			(0x1 << 14)
#define ICSTR_SDIR_other		(0x0 << 14)
#define ICSTR_SDIR_slaveTX		(0x1 << 14)
#define ICSTR_SDIR_clear		(0x1 << 14)
#define ICSTR_NACKSNT_MASK		(0x1 << 13)
#define ICSTR_NACKSNT_none		(0x0 << 13)
#define ICSTR_NACKSNT_sent		(0x1 << 13)
#define ICSTR_NACKSNT_clear		(0x1 << 13)
#define ICSTR_BB_MASK			(0x1 << 12)
#define ICSTR_BB_free			(0x0 << 12)
#define ICSTR_BB_busy			(0x1 << 12)
#define ICSTR_BB_clear			(0x1 << 12)
#define ICSTR_RSFULL_MASK		(0x1 << 11)
#define ICSTR_RSFULL_none		(0x0 << 11)
#define ICSTR_RSFULL_overrun		(0x1 << 11)
#define ICSTR_XSMT_MASK			(0x1 << 10)
#define ICSTR_XSMT_underflow		(0x0 << 10)
#define ICSTR_XSMT_none			(0x1 << 10)
#define ICSTR_AAS_MASK			(0x1 << 9)
#define ICSTR_ASS_cleared		(0x0 << 9)
#define ICSTR_ASS_set			(0x1 << 9)
#define ICSTR_AD0_MASK			(0x1 << 8)
#define ICSTR_AD0_cleared		(0x0 << 8)
#define ICSTR_AD0_detected		(0x1 << 8)
#define ICSTR_SCD_MASK			(0x1 << 5)
#define ICSTR_SCD_none			(0x0 << 5)
#define ICSTR_SCD_detected		(0x1 << 5)
#define ICSTR_SCD_clear			(0x1 << 5)
#define ICSTR_ICXRDY_MASK		(0x1 << 4)
#define ICSTR_ICXRDY_none		(0x0 << 4)
#define ICSTR_ICXRDY_ready		(0x1 << 4)
#define ICSTR_ICXRDY_clear		(0x1 << 4)
#define ICSTR_ICRRDY_MASK		(0x1 << 3)
#define ICSTR_ICRRDY_none		(0x0 << 3)
#define ICSTR_ICRRDY_ready		(0x1 << 3)
#define ICSTR_ICRRDY_clear		(0x1 << 3)
#define ICSTR_ARDY_MASK			(0x1 << 2)
#define ICSTR_ARDY_none			(0x0 << 2)
#define ICSTR_ARDY_ready		(0x1 << 2)
#define ICSTR_ARDY_clear		(0x1 << 2)
#define ICSTR_NACK_MASK			(0x1 << 1)
#define ICSTR_NACK_ack			(0x0 << 1)
#define ICSTR_NACK_nack			(0x1 << 1)
#define ICSTR_NACK_clear		(0x1 << 1)
#define ICSTR_AL_MASK			(0x1 << 0)
#define ICSTR_AL_none			(0x0 << 0)
#define ICSTR_AL_lost			(0x1 << 0)
#define ICSTR_AL_clear			(0x1 << 0)
#define ICCLKL_MASK			(0xFFFF << 0)
#define ICCLKH_MASK			(0xFFFF << 0)
#define ICCNT_MASK			(0xFFFF << 0)
#define ICDRR_MASK			(0xFF << 0)
#define ICSAR_SADDR_MASK		(0x3FF << 0)
#define ICSAR_SADDR_VAL(x)		((0x3FF & (x)) << 0)
#define ICDXR_MASK			(0xFF << 0)
#define ICMDR_NACKMOD_MASK		(0x1 << 15)
#define ICMDR_NACKMOD_no		(0x0 << 15)
#define ICMDR_NACKMOD_yes		(0x1 << 15)
#define ICMDR_FREE_MASK			(0x1 << 14)
#define ICMDR_FREE_emu			(0x0 << 14)
#define ICMDR_FREE_run			(0x1 << 14)
#define ICMDR_STT_MASK			(0x1 << 13)
#define ICMDR_STT_no			(0x0 << 13)
#define ICMDR_STT_yes			(0x1 << 13)
#define ICMDR_STP_MASK			(0x1 << 11)
#define ICMDR_STP_no			(0x0 << 11)
#define ICMDR_STP_yes			(0x1 << 11)
#define ICMDR_MST_MASK			(0x1 << 10)
#define ICMDR_MST_slave			(0x0 << 10)
#define ICMDR_MST_master		(0x1 << 10)
#define ICMDR_TRX_MASK			(0x1 << 9)
#define ICMDR_TRX_receiver		(0x0 << 9)
#define ICMDR_TRX_transmitter		(0x1 << 9)
#define ICMDR_XA_MASK			(0x1 << 8)
#define ICMDR_XA_7bit			(0x0 << 8)
#define ICMDR_XA_10bit			(0x1 << 8)
#define ICMDR_RM_MASK			(0x1 << 7)
#define ICMDR_RM_no			(0x0 << 7)
#define ICMDR_RM_yes			(0x1 << 7)
#define ICMDR_DLB_MASK			(0x1 << 6)
#define ICMDR_DLB_disable		(0x0 << 6)
#define ICMDR_DLB_enable		(0x1 << 6)
#define ICMDR_IRS_MASK			(0x1 << 5)
#define ICMDR_IRS_reset			(0x0 << 5)
#define ICMDR_IRS_none			(0x1 << 5)
#define ICMDR_STB_MASK			(0x1 << 4)
#define ICMDR_STB_no			(0x0 << 4)
#define ICMDR_STB_yes			(0x1 << 4)
#define ICMDR_FDF_MASK			(0x1 << 3)
#define ICMDR_FDF_no			(0x0 << 3)
#define ICMDR_FDF_yes			(0x1 << 3)
#define ICMDR_BC_MASK			(0x7 << 0)
#define ICMDR_BC_VAL(x)			((0x7 & (x)) << 0)
#define ICIVR_INTCODE_MASK		(0x7 << 0)
#define ICIVR_INTCODE_none		(0x0 << 0)
#define ICIVR_INTCODE_AL		(0x1 << 0)
#define ICIVR_INTCODE_NACK		(0x2 << 0)
#define ICIVR_INTCODE_ARDY		(0x3 << 0)
#define ICIVR_INTCODE_ICRRDY		(0x4 << 0)
#define ICIVR_INTCODE_ICXRDY		(0x5 << 0)
#define ICIVR_INTCODE_SCD		(0x6 << 0)
#define ICIVR_INTCODE_AAS		(0x7 << 0)
#define ICEMDR_IGNACK_MASK		(0x1 << 1)
#define ICEMDR_IGNACK_no		(0x0 << 1)
#define ICEMDR_IGNACK_yes		(0x1 << 1)
#define ICEMDR_BCM_MASK			(0x1 << 0)
#define ICEMDR_BCM_ack			(0x0 << 0)
#define ICEMDR_BCM_none			(0x1 << 0)
#define ICPSC_IPSC_MASK			(0xFF << 0)
#define ICPSC_IPSC_VAL(x)		((0xFF & (x)) << 0)
#define ICDMAC_TXDMAEN_MASK		(0x1 << 1)
#define ICDMAC_TXDMAEN_disable		(0x0 << 1)
#define ICDMAC_TXDMAEN_enable		(0x1 << 1)
#define ICDMAC_RXDMAEN_MASK		(0x1 << 0)
#define ICDMAC_RXDMAEN_disable		(0x0 << 0)
#define ICDMAC_RXDMAEN_enable		(0x1 << 0)
#define ICPFUNC_PFUNC0_MASK		(0x1 << 0)
#define ICPFUNC_PFUNC0_i2c		(0x0 << 0)
#define ICPFUNC_PFUNC0_gpio		(0x1 << 0)
#define ICPXXX_SCL			0x0
#define ICPXXX_SDA			0x1
#define ICPDIR_PDIRx_MASK(x)		(0x1 << (x))
#define ICPDIR_PDIRx_input(x)		(0x0 << (x))
#define ICPDIR_PDIRx_output(x)		(0x1 << (x))
#define ICPDIO_PDIO_MASK(x)		(0x1 << (x))
#define ICPDIO_PDIO_low(x)		(0x0 << (x))
#define ICPDIO_PDIO_high(x)		(0x1 << (x))
#define ICPDXXX_MASK(x)			(0x1 << (x))
#define ICPDXXX_none(x)			(0x0 << (x))
#define ICPDXXX_assert(x)		(0x1 << (x))
#define LCDC_REVID			0x4C100100
#define LCD_CTRL_CLKDIV_MASK		(0xFF << 8)
#define LCD_CTRL_CLKDIV_X(x)		(((x) & 0xFF) << 8)
#define RASTER_CTRL_PLM_MASK		(0x3 << 20)
#define RASTER_CTRL_PLM_PaletteData	(0x0 << 20)
#define RASTER_CTRL_PLM_Palette		(0x1 << 20)
#define RASTER_CTRL_PLM_Data		(0x2 << 20)
#define RASTER_CTRL_FDD_MASK		(0xFF << 12)
#define RASTER_CTRL_FDD_X(x)		(((x) & 0xFF) << 12)
#define RT0_HBP_MASK			(0xFF << 24)
#define RT0_HBP_VAL(x)			(((x) & 0xFF) << 24)
#define RT0_HFP_MASK			(0xFF << 16)
#define RT0_HFP_VAL(x)			(((x) & 0xFF) << 16)
#define RT0_HSW_MASK			(0x3F << 10)
#define RT0_HSW_VAL(x)			(((x) & 0x3F) << 10)
#define RT0_PPL_MASK			(0x3F << 4)
#define RT0_PPL_VAL(x)			(((x) & 0x3F) << 4)
#define RT1_VBP_MASK			(0xFF << 24)
#define RT1_VBP_VAL(x)			(((x) & 0xFF) << 24)
#define RT1_VFP_MASK			(0xFF << 16)
#define RT1_VFP_VAL(x)			(((x) & 0xFF) << 16)
#define RT1_VSW_MASK			(0x3F << 10)
#define RT1_VSW_VAL(x)			(((x) & 0x3F) << 10)
#define RT1_LPP_MASK			(0x3FF << 0)
#define RT1_LPP_VAL(x)			(((x) & 0x3FF) << 0)
#define RT2_ACBI_MASK			(0xF << 16)
#define RT2_ACBI_VAL(x)			(((x) & 0xF) << 16)
#define RT2_ACB_MASK			(0xFF << 8)
#define RT2_ACB_VAL(x)			(((x) & 0xFF) << 8)
#define RSP_LPPT_MASK			(0x3FF << 16)
#define RSP_LPPT_VAL(x)			(((x) & 0x3FF) << 16)
#define RSP_DPD_MASK			(0xFFF << 4)
#define RSP_DPD_VAL(x)			(((x) & 0xFFF) << 4)
#define LDMAC_TFR_MASK			(0x7 << 8)
#define LDMAC_TFR_VAL(x)		(((x) & 0x7) << 8)
#define LDMAC_TFR_8dwords		(0x0 << 8)
#define LDMAC_TFR_16dwords		(0x1 << 8)
#define LDMAC_TFR_32dwords		(0x2 << 8)
#define LDMAC_TFR_64dwords		(0x3 << 8)
#define LDMAC_TFR_128dwords		(0x4 << 8)
#define LDMAC_TFR_256dwords		(0x5 << 8)
#define LDMAC_TFR_512dwords		(0x6 << 8)
#define LDMAC_BURSTSIZE_MASK		(0x7 << 4)
#define LDMAC_BURSTSIZE_VAL(x)		(((x) & 0x7) << 4)
#define LDMAC_BURSTSIZE_1		(0x0 << 4)
#define LDMAC_BURSTSIZE_2		(0x1 << 4)
#define LDMAC_BURSTSIZE_4		(0x2 << 4)
#define LDMAC_BURSTSIZE_8		(0x3 << 4)
#define LDMAC_BURSTSIZE_16		(0x4 << 4)
#define MMCCTL_DATEG_MASK		(0x3 << 6)
#define MMCCTL_DATEG_disabled		(0x0 << 6)
#define MMCCTL_DATEG_rising		(0x1 << 6)
#define MMCCTL_DATEG_falling		(0x2 << 6)
#define MMCCTL_DATEG_both		(0x3 << 6)
#define MMCCLK_CLKRT_MASK		(0xFF << 0)
#define MMCCLK_CLKRT_VAL(x)		((((x) - 1) & 0xFF) << 0)
#define MMCTOR_TOD25_16_MASK		(0x3FF << 8)
#define MMCTOR_TOD25_16_VAL(x)		((((x) >> 16) & 0x3FF) << 8)
#define MMCTOR_TOR_MASK			(0xFF << 0)
#define MMCTOR_TOR_VAL(x)		(((x) & 0xFF) << 0)
#define MMCTOD_TOD15_0_MASK		(0xFFFF << 0)
#define MMCTOD_TOD15_0_VAL(x)		(((x) & 0xFFFF) << 0)
#define MMCBLEN_BLEN_MASK		(0xFFF << 0)
#define MMCBLEN_BLEN_VAL(x)		((x) << 0)
#define MMCNBLK_NBLK_MASK		(0xFFFF << 0)
#define MMCNBLK_NBLK_Infinite		0x0
#define MMCNBLK_NBLK_VAL(x)		((x) << 0)
#define MMCNBLC_NBLC_MASK		(0xFFFF << 0)
#define MMCCMD_RSPFMT_MASK		(0x3 << 9)
#define MMCCMD_RSPFMT_none		(0x0 << 9)
#define MMCCMD_RSPFMT_48bCRC		(0x1 << 9)
#define MMCCMD_RSPFMT_136b		(0x2 << 9)
#define MMCCMD_RSPFMT_48b		(0x3 << 9)
#define MMCCMD_CMD_MASK			(0x3F << 0)
#define MMCCMD_CMD_VAL(x)		(((x) & 0x3F) << 0)
#define MMCARGHL_ARGH_MASK		(0xFFFF << 16)
#define MMCARGHL_ARGH_VAL(x)		(((x) & 0xFFFF) << 16)
#define MMCARGHL_ARGL_MASK		(0xFFFF << 0)
#define MMCARGHL_ARGL_VAL(x)		(((x) & 0xFFFF) << 0)
#define MMCDRSP_DRSP_MASK		(0xFF << 0)
#define MMCCIDX_CIDX_MASK		(0x3F << 0)
#define MMCFIFOCTL_ACCWD_MASK		(0x3 << 3)
#define MMCFIFOCTL_ACCWD_4bytes		(0x0 << 3)
#define MMCFIFOCTL_ACCWD_3bytes		(0x1 << 3)
#define MMCFIFOCTL_ACCWD_2bytes		(0x2 << 3)
#define MMCFIFOCTL_ACCWD_1bytes		(0x3 << 3)
#define RTCINT_EVERY_MASK		(0x3 << 0)
#define RTCINT_EVERY_Second		(0x0 << 0)
#define RTCINT_EVERY_Minute		(0x1 << 0)
#define RTCINT_EVERY_Hour		(0x2 << 0)
#define RTCINT_EVERY_Day		(0x3 << 0)
#define COMPxSB_MASK			(0xFF << 0)
#define RTC_KICK0R_VAL			(0x83E70B13)
#define RTC_KICK1R_VAL			(0x95A4F1E0)
#define EMUMGT_SOFT_MASK		(0x1 << 1)
#define EMUMGT_SOFT_stop		(0x0 << 1)
#define EMUMGT_SOFT_reach		(0x1 << 1)
#define EMUMGT_FREE_MASK		(0x1 << 0)
#define EMUMGT_FREE_soft		(0x0 << 0)
#define EMUMGT_FREE_run			(0x1 << 0)
#define GPINTGPEN_GPENO12_MASK		(0x1 << 17)
#define GPINTGPEN_GPENO12_timer		(0x0 << 17)
#define GPINTGPEN_GPENO12_gpio		(0x1 << 17)
#define GPINTGPEN_GPENI12_MASK		(0x1 << 16)
#define GPINTGPEN_GPENI12_timer		(0x0 << 16)
#define GPINTGPEN_GPENI12_gpio		(0x1 << 16)
#define GPINTGPEN_GPINT12INVO_MASK	(0x1 << 5)
#define GPINTGPEN_GPINT12INVO_rising	(0x0 << 5)
#define GPINTGPEN_GPINT12INVO_falling	(0x1 << 5)
#define GPINTGPEN_GPINT12INVI_MASK	(0x1 << 4)
#define GPINTGPEN_GPINT12INVI_rising	(0x0 << 4)
#define GPINTGPEN_GPINT12INVI_falling	(0x1 << 4)
#define GPINTGPEN_GPINT12ENO_MASK	(0x1 << 1)
#define GPINTGPEN_GPINT12ENO_rising	(0x0 << 1)
#define GPINTGPEN_GPINT12ENO_falling	(0x1 << 1)
#define GPINTGPEN_GPINT12ENI_MASK	(0x1 << 0)
#define GPINTGPEN_GPINT12ENI_rising	(0x0 << 0)
#define GPINTGPEN_GPINT12ENI_falling	(0x1 << 0)
#define GPDATGPDIR_GPDIRO12_MASK	(0x1 << 17)
#define GPDATGPDIR_GPDIRO12_gpio_in	(0x0 << 17)
#define GPDATGPDIR_GPDIRO12_gpio_out	(0x1 << 17)
#define GPDATGPDIR_GPDIRI12_MASK	(0x1 << 16)
#define GPDATGPDIR_GPDIRI12_gpio_in	(0x0 << 16)
#define GPDATGPDIR_GPDIRI12_gpio_out	(0x1 << 16)
#define GPDATGPDIR_GPDATO12_MASK	(0x1 << 1)
#define GPDATGPDIR_GPDATO12_low		(0x0 << 1)
#define GPDATGPDIR_GPDATO12_high	(0x1 << 1)
#define GPDATGPDIR_GPDATI12_MASK	(0x1 << 0)
#define GPDATGPDIR_GPDATI12_low		(0x0 << 0)
#define GPDATGPDIR_GPDATI12_high	(0x1 << 0)
#define TCR_READRSTMODE34_MASK		(0x1 << 26)
#define TCR_READRSTMODE34_none		(0x0 << 26)
#define TCR_READRSTMODE34_reset		(0x1 << 26)
#define TCR_ENAMODE34_MASK		(0x3 << 22)
#define TCR_ENAMODE34_disabled		(0x0 << 22)
#define TCR_ENAMODE34_once		(0x1 << 22)
#define TCR_ENAMODE34_enabled		(0x2 << 22)
#define TCR_ENAMODE34_reload		(0x3 << 22)
#define TCR_CAPEVTMODE12_MASK		(0x3 << 12)
#define TCR_CAPEVTMODE12_rising		(0x0 << 12)
#define TCR_CAPEVTMODE12_falling	(0x1 << 12)
#define TCR_CAPEVTMODE12_both		(0x2 << 12)
#define TCR_CAPMODE12_MASK		(0x1 << 11)
#define TCR_CAPMODE12_none		(0x0 << 11)
#define TCR_CAPMODE12_capture		(0x1 << 11)
#define TCR_READRSTMODE12_MASK		(0x1 << 10)
#define TCR_READRSTMODE12_none		(0x0 << 10)
#define TCR_READRSTMODE12_reset		(0x1 << 10)
#define TCR_TIEN12_MASK			(0x1 << 9)
#define TCR_TIEN12_none			(0x0 << 9)
#define TCR_TIEN12_gated		(0x1 << 9)
#define TCR_CLKSRC12_MASK		(0x1 << 8)
#define TCR_CLKSRC12_internal		(0x0 << 8)
#define TCR_CLKSRC12_external		(0x1 << 8)
#define TCR_ENAMODE12_MASK		(0x3 << 6)
#define TCR_ENAMODE12_disabled		(0x0 << 6)
#define TCR_ENAMODE12_once		(0x1 << 6)
#define TCR_ENAMODE12_enabled		(0x2 << 6)
#define TCR_ENAMODE12_reload		(0x3 << 6)
#define TCR_PWID12_MASK			(0x3 << 4)
#define TCR_PWID12_VAL(x)		((0x3 & (x - 1)) << 4)
#define TCR_CP12_MASK			(0x1 << 3)
#define TCR_CP12_pulse			(0x0 << 3)
#define TCR_CP12_clock			(0x1 << 3)
#define TCR_INVINP12_MASK		(0x1 << 2)
#define TCR_INVINP12_uninverted		(0x0 << 2)
#define TCR_INVINP12_inverted		(0x1 << 2)
#define TCR_INVOUTP12_MASK		(0x1 << 1)
#define TCR_INVOUTP12_uninverted	(0x0 << 1)
#define TCR_INVOUTP12_inverted		(0x1 << 1)
#define TCR_TSTAT12_MASK		(0x1 << 0)
#define TCR_TSTAT12_deasserted		(0x0 << 0)
#define TCR_TSTAT12_asserted		(0x1 << 0)
#define TGCR_TDDR34_MASK		(0xF << 12)
#define TGCR_TDDR34_VAL(x)		((0xF & (x)) << 12)
#define TGCR_PSC34_MASK			(0xF << 8)
#define TGCR_PSC34_VAL(x)		((0xF & (x)) << 8)
#define TGCR_PLUSEN_MASK		(0x1 << 4)
#define TGCR_PLUSEN_unavilable		(0x0 << 4)
#define TGCR_PLUSEN_available		(0x1 << 4)
#define TGCR_TIMMODE_MASK		(0x3 << 2)
#define TGCR_TIMMODE_64bit		(0x0 << 2)
#define TGCR_TIMMODE_unchained		(0x1 << 2)
#define TGCR_TIMMODE_watchdog		(0x2 << 2)
#define TGCR_TIMMODE_chained		(0x3 << 2)
#define TGCR_TIM34RS_MASK		(0x1 << 1)
#define TGCR_TIM34RS_reset		(0x0 << 1)
#define TGCR_TIM34RS_none		(0x1 << 1)
#define TGCR_TIM12RS_MASK		(0x1 << 0)
#define TGCR_TIM12RS_reset		(0x0 << 0)
#define TGCR_TIM12RS_none		(0x1 << 0)
#define WDTCR_WDKEY_MASK		(0xFFFF << 16)
#define WDTCR_WDKEY_VAL(x)		((x) << 16)
#define WDTCR_WDFLAG_MASK		(0x1 << 15)
#define WDTCR_WDFLAG_none		(0x0 << 15)
#define WDTCR_WDFLAG_timeout		(0x1 << 15)
#define WDTCR_WDEN_MASK			(0x1 << 14)
#define WDTCR_WDEN_disable		(0x0 << 14)
#define WDTCR_WDEN_enable		(0x1 << 14)
#define INTCTLSTAT_EVTINTSTAT34_MASK	(0x1 << 19)
#define INTCTLSTAT_EVTINTSTAT34_none	(0x0 << 19)
#define INTCTLSTAT_EVTINTSTAT34_occurred (0x1 << 19)
#define INTCTLSTAT_EVTINTSTAT34_clear	(0x1 << 19)
#define INTCTLSTAT_EVTINTEN34_MASK	(0x1 << 18)
#define INTCTLSTAT_EVTINTEN34_disable	(0x0 << 18)
#define INTCTLSTAT_EVTINTEN34_enable	(0x1 << 18)
#define INTCTLSTAT_PRDINTSTAT34_MASK	(0x1 << 17)
#define INTCTLSTAT_PRDINTSTAT34_none	(0x0 << 17)
#define INTCTLSTAT_PRDINTSTAT34_occurred (0x1 << 17)
#define INTCTLSTAT_PRDINTSTAT34_clear	(0x1 << 17)
#define INTCTLSTAT_PRDINTEN34_MASK	(0x1 << 16)
#define INTCTLSTAT_PRDINTEN34_disable	(0x0 << 16)
#define INTCTLSTAT_PRDINTEN34_enable	(0x1 << 16)
#define INTCTLSTAT_EVTINTSTAT12_MASK	(0x1 << 3)
#define INTCTLSTAT_EVTINTSTAT12_none	(0x0 << 3)
#define INTCTLSTAT_EVTINTSTAT12_occurred (0x1 << 3)
#define INTCTLSTAT_EVTINTSTAT12_clear	(0x1 << 3)
#define INTCTLSTAT_EVTINTEN12_MASK	(0x1 << 2)
#define INTCTLSTAT_EVTINTEN12_disable	(0x0 << 2)
#define INTCTLSTAT_EVTINTEN12_enable	(0x1 << 2)
#define INTCTLSTAT_PRDINTSTAT12_MASK	(0x1 << 1)
#define INTCTLSTAT_PRDINTSTAT12_none	(0x0 << 1)
#define INTCTLSTAT_PRDINTSTAT12_occurred (0x1 << 1)
#define INTCTLSTAT_PRDINTSTAT12_clear	(0x1 << 1)
#define INTCTLSTAT_PRDINTEN12_MASK	(0x1 << 0)
#define INTCTLSTAT_PRDINTEN12_disable	(0x0 << 0)
#define INTCTLSTAT_PRDINTEN12_enable	(0x1 << 0)
#define RBR_DATA_MASK			0xFF
#define THRw				RBRr
#define THR_DATA_MASK			0xFF
#define IER_EDSSI_MASK			(0x1 << 3)
#define IER_EDSSI_disable		(0x0 << 3)
#define IER_EDSSI_enable		(0x1 << 3)
#define IER_ELSI_MASK			(0x1 << 2)
#define IER_ELSI_disable		(0x0 << 2)
#define IER_ELSI_enable			(0x1 << 2)
#define IER_ETBEI_MASK			(0x1 << 1)
#define IER_ETBEI_disable		(0x0 << 1)
#define IER_ETBEI_enable		(0x1 << 1)
#define IER_ERBI_MASK			(0x1 << 0)
#define IER_ERBI_disable		(0x0 << 0)
#define IER_ERBI_enable			(0x1 << 0)
#define IIR_FIFOEN_MASK			(0x3 << 6)
#define IIR_FIFOEN_Non_FIFO		(0x0 << 6)
#define IIR_FIFOEN_enabled		(0x3 << 6)
#define IIR_INTID_MASK			(0x7 << 1)
#define IIR_INTID_thr_empty		(0x1 << 1)
#define IIR_INTID_data_avail		(0x2 << 1)
#define IIR_INTID_line_status		(0x3 << 1)
#define IIR_INTID_timeout		(0x6 << 1)
#define IIR_IPEND_MASK			(0x1 << 0)
#define IIR_IPEND_yes			(0x0 << 0)
#define IIR_IPEND_no			(0x1 << 0)
#define FCRw		IIRr
#define FCR_RXFIFTL_MASK		(0x3 << 6)
#define FCR_RXFIFTL_1byte		(0x0 << 6)
#define FCR_RXFIFTL_4bytes		(0x1 << 6)
#define FCR_RXFIFTL_8bytes		(0x2 << 6)
#define FCR_RXFIFTL_14bytes		(0x3 << 6)
#define FCR_DMAMODE1_MASK		(0x1 << 3)
#define FCR_DMAMODE1_disable		(0x0 << 3)
#define FCR_DMAMODE1_enable		(0x1 << 3)
#define FCR_TXCLR_MASK			(0x1 << 2)
#define FCR_TXCLR_clear			(0x1 << 2)
#define FCR_RXCLR_MASK			(0x1 << 1)
#define FCR_RXCLR_clear			(0x1 << 1)
#define FCR_FIFOEN_MASK			(0x1 << 0)
#define FCR_FIFOEN_No			(0x0 << 0)
#define FCR_FIFOEN_Yes			(0x1 << 0)
#define LCR_DLAB_MASK			(0x1 << 7)
#define LCR_DLAB_rbr_thr_ier		(0x0 << 7)
#define LCR_DLAB_dll_dlh		(0x1 << 7)
#define LCR_BC_MASK			(0x1 << 6)
#define LCR_BC_disabled			(0x0 << 6)
#define LCR_BC_enabled			(0x1 << 6)
#define LCR_SP_MASK			(0x1 << 5)
#define LCR_SP_disabled			(0x0 << 5)
#define LCR_SP_enabled			(0x1 << 5)
#define LCR_EPS_MASK			(0x1 << 4)
#define LCR_EPS_Odd			(0x0 << 4)
#define LCR_EPS_Even			(0x1 << 4)
#define LCR_PEN_MASK			(0x1 << 3)
#define LCR_PEN_No			(0x0 << 3)
#define LCR_PEN_Yes			(0x1 << 3)
#define LCR_STB_MASK			(0x1 << 2)
#define LCR_STB_1STOP			(0x0 << 2)
#define LCR_STB_15_2STOP		(0x1 << 2)
#define LCR_WLS_MASK			(0x3 << 0)
#define LCR_WLS_5bits			(0x0 << 0)
#define LCR_WLS_6bits			(0x1 << 0)
#define LCR_WLS_7bits			(0x2 << 0)
#define LCR_WLS_8bits			(0x3 << 0)
#define MCR_AFE_MASK			(0x1 << 5)
#define MCR_AFE_disabled		(0x0 << 5)
#define MCR_AFE_enabled			(0x1 << 5)
#define MCR_LOOP_MASK			(0x1 << 4)
#define MCR_LOOP_disabled		(0x0 << 4)
#define MCR_LOOP_enabled		(0x1 << 4)
#define MCR_RTS_MASK			(0x1 << 1)
#define MCR_RTS_disabled		(0x0 << 1)
#define MCR_RTS_enabled			(0x1 << 1)
#define LSR_RXFIFOE_MASK		(0x1 << 7)
#define LSR_RXFIFOE_no_error		(0x0 << 7)
#define LSR_RXFIFOE_error		(0x1 << 7)
#define LSR_TEMT_MASK			(0x1 << 6)
#define LSR_TEMT_no			(0x0 << 6)
#define LSR_TEMT_yes			(0x1 << 6)
#define LSR_THRE_MASK			(0x1 << 5)
#define LSR_THRE_no			(0x0 << 5)
#define LSR_THRE_yes			(0x1 << 5)
#define LSR_BI_MASK			(0x1 << 4)
#define LSR_BI_no			(0x0 << 4)
#define LSR_BI_yes			(0x1 << 4)
#define LSR_FE_MASK			(0x1 << 3)
#define LSR_FE_no			(0x0 << 3)
#define LSR_FE_yes			(0x1 << 3)
#define LSR_PE_MASK			(0x1 << 2)
#define LSR_PE_no			(0x0 << 2)
#define LSR_PE_yes			(0x1 << 2)
#define LSR_OE_MASK			(0x1 << 1)
#define LSR_OE_no			(0x0 << 1)
#define LSR_OE_yes			(0x1 << 1)
#define LSR_DR_MASK			(0x1 << 0)
#define LSR_DR_no			(0x0 << 0)
#define LSR_DR_yes			(0x1 << 0)
#define MSR_CD_MASK			(0x1 << 7)
#define MSR_CD_high			(0x0 << 7)
#define MSR_CD_low			(0x1 << 7)
#define MSR_RI_MASK			(0x1 << 6)
#define MSR_RI_high			(0x0 << 6)
#define MSR_RI_low			(0x1 << 6)
#define MSR_DSR_MASK			(0x1 << 5)
#define MSR_DSR_high			(0x0 << 5)
#define MSR_DSR_low			(0x1 << 5)
#define MSR_CTS_MASK			(0x1 << 4)
#define MSR_CTS_high			(0x0 << 4)
#define MSR_CTS_low			(0x1 << 4)
#define MSR_DCD_MASK			(0x1 << 3)
#define MSR_DCD_unchanged		(0x0 << 3)
#define MSR_DCD_changed			(0x1 << 3)
#define MSR_TERI_MASK			(0x1 << 2)
#define MSR_TERI_unchanged		(0x0 << 2)
#define MSR_TERI_changed		(0x1 << 2)
#define MSR_DDSR_MASK			(0x1 << 1)
#define MSR_DDSR_unchanged		(0x0 << 1)
#define MSR_DDSR_changed		(0x1 << 1)
#define MSR_DCTS_MASK			(0x1 << 0)
#define MSR_DCTS_unchanged		(0x0 << 0)
#define MSR_DCTS_changed		(0x1 << 0)
#define SCR_MASK			0xFF
#define PWREMU_UTRST_MASK		(0x1 << 14)
#define PWREMU_UTRST_reset		(0x0 << 14)
#define PWREMU_UTRST_enabled		(0x1 << 14)
#define PWREMU_URRST_MASK		(0x1 << 13)
#define PWREMU_URRST_reset		(0x0 << 13)
#define PWREMU_URRST_enabled		(0x1 << 13)
#define PWREMU_FREE_MASK		(0x1 << 0)
#define PWREMU_FREE_halt		(0x0 << 0)
#define PWREMU_FREE_run			(0x1 << 0)
#define MDR_OSM_SEL_MASK		(0x1 << 0)
#define MDR_OSM_SEL_16x			(0x0 << 0)
#define MDR_OSM_SEL_13x			(0x1 << 0)
#define xXMAXP_MAXPAYLOAD_MASK		(0x7FF << 0)
#define COUNT0_EP0RXCOUNT_MASK		(0x7F << 0)
#define RXCOUNT_EPRXCOUNT_MASK		(0x1FFF << 0)
#define USB0_REVID			0x4EA10800
#define USB0_EP_CNT			5
#define MODE_MODE_TX_MASK(ep)		(0x3 << (((ep) - 1) << 2))
#define MODE_MODE_RX_MASK(ep)		(0x30000 << (((ep) - 1) << 2))
#define MODE_xMODE_Transparent		(0x0 << 0)
#define MODE_xMODE_RNDIS		(0x1 << 0)
#define MODE_xMODE_CDC			(0x2 << 0)
#define MODE_xMODE_GenericRNDIS		(0x3 << 0)
#define AUTOREQ_AUTREQ_MASK(ep)		(0x3 << (((ep) - 1) << 1))
#define AUTOREQ_xAUTREQ_None		(0x0 << 0)
#define AUTOREQ_xAUTREQ_NotEOP		(0x1 << 0)
#define AUTOREQ_xAUTREQ_Always		(0x3 << 0)
#define TEARDOWN_RX_MASK(ep)		(0x1 << (ep))
#define TEARDOWN_RX_diable(ep)		(0x0 << (ep))
#define TEARDOWN_RX_enable(ep)		(0x1 << (ep))
#define TEARDOWN_TX_MASK(ep)		(0x10000 << (ep))
#define TEARDOWN_TX_diable(ep)		(0x00000 << (ep))
#define TEARDOWN_TX_enable(ep)		(0x10000 << (ep))
#define INTxR_TXEPn_MASK(ep)		(0x1 << (ep))
#define INTxR_TXEPn_no(ep)		(0x0 << (ep))
#define INTxR_TXEPn_yes(ep)		(0x1 << (ep))
#define INTxR_RXEPn_MASK(ep)		(0x1 << ((ep) + 8))
#define INTxR_RXEPn_no(ep)		(0x0 << ((ep) + 8))
#define INTxR_RXEPn_yes(ep)		(0x1 << ((ep) + 8))
#define INTxR_INTUSB_MASK(ir)		(0x1 << ((ir) + 16))
#define INTxR_INTUSB_no(ir)		(0x0 << ((ir) + 16))
#define INTxR_INTUSB_yes(ir)		(0x1 << ((ir) + 16))
#define EOIR_EOI_MASK(ir)		(0x1 << (ir))
#define EOIR_EOI_no(ir)			(0x0 << (ir))
#define EOIR_EOI_yes(ir)		(0x1 << (ir))
#define GENRNDISSZx_SIZE_MASK		(0x1FFFF << 0)
#define FADDR_FUNCADDR_MASK		(0x7F << 0)
#define INTRx_EP_MASK(ep)		(0x1 << (ep))
#define INTRx_EP_disable(ep)		(0x0 << (ep))
#define INTRx_EP_enable(ep)		(0x1 << (ep))
#define INTRUSBx_INTUSB_MASK(ir)	(0x1 << (ir))
#define INTRUSBx_INTUSB_no(ir)		(0x0 << (ir))
#define INTRUSBx_INTUSB_yes(ir)		(0x1 << (ir))
#define FRAME_FRAMENUMBER_MASK		(0x7FF << 0)
#define INDEX_EPSEL_MASK		(0xF << 0)
#define INDEX_EPSEL_VAL(ep)		((ep) << 0)
#define DEVCTL_VBUS_MASK		(0x3 << 3)
#define DEVCTL_VBUS_BelowSEnd		(0x0 << 3)
#define DEVCTL_VBUS_SEnd_AValid		(0x1 << 3)
#define DEVCTL_VBUS_AValid_VBusValid	(0x2 << 3)
#define DEVCTL_VBUS_AboveVbusValid	(0x3 << 3)
#define xXFIFOSZ_SZ_MASK		(0xF << 0)
#define xXFIFOSZ_SZ_8B			(0x0 << 0)
#define xXFIFOSZ_SZ_16B			(0x1 << 0)
#define xXFIFOSZ_SZ_32B			(0x2 << 0)
#define xXFIFOSZ_SZ_64B			(0x3 << 0)
#define xXFIFOSZ_SZ_128B		(0x4 << 0)
#define xXFIFOSZ_SZ_256B		(0x5 << 0)
#define xXFIFOSZ_SZ_512B		(0x6 << 0)
#define xXFIFOSZ_SZ_1KB			(0x7 << 0)
#define xXFIFOSZ_SZ_2KB			(0x8 << 0)
#define xXFIFOSZ_SZ_4KB			(0x9 << 0)
#define xXFIFOSZ_SZ_8KB			(0xA << 0)
#define xXFIFOSZ_SZ_16KB		(0xB << 0)
#define xXFIFOSZ_SZ_32KB		(0xC << 0)
#define xXFIFOSZ_SZ_64KB		(0xD << 0)
#define xXFIFOSZ_SZ_128KB		(0xE << 0)
#define xXFIFOSZ_SZ_256KB		(0xF << 0)
#define xXFIFOADDR_ADDR_MASK		(0x1FFF << 0)
#define xXFIFOADDR_ADDR_VAL(adr)	(((adr) >> 3) << 0)
#define HWVERS_REVMAJ_MASK		(0x1F << 10)
#define HWVERS_REVMIN_MASK		(0x3FF << 0)
#define EDMA3_0CC0_BASE			0x01C00000
#define EDMA3_0TC0_BASE			0x01C08000
#define EDMA3_0TC1_BASE			0x01C08400
#define PSC0_BASE			0x01C10000
#define PLL0_BASE			0x01C11000
#define SYSCFG0_BASE			0x01C14000
#define TIMER0_BASE			0x01C20000
#define TIMER1_BASE			0x01C21000
#define I2C0_BASE			0x01C22000
#define RTC_BASE			0x01C23000
#define PRU_DataRAM0_BASE		0x01C30000
#define PRU_DataRAM0_SIZE		0x00000200
#define PRU_DataRAM1_BASE		0x01C32000
#define PRU_DataRAM1_SIZE		0x00000200
#define PRU_INTC_BASE			0x01C34000
#define PRU0_BASE			0x01C37000
#define PRU1_BASE			0x01C37800
#define PRU_InstRAM0_BASE		0x01C38000
#define PRU_InstRAM0_SIZE		0x00001000
#define PRU_InstRAM1_BASE		0x01C3C000
#define PRU_InstRAM1_SIZE		0x00001000
#define MMCSD0_BASE			0x01C40000
#define UART0_BASE			0x01C42000
#define UART1_BASE			0x01D0C000
#define UART2_BASE			0x01D0D000
#define USB0_BASE			0x01E00000
#define LCD0_BASE			0x01E13000
#define MPU1_BASE			0x01E14000
#define MPU2_BASE			0x01E15000
#define PLL1_BASE			0x01E1A000
#define MMCSD1_BASE			0x01E1B000
#define EMACCRAM_BASE			0x01E20000
#define EMACCRAM_SIZE			0x00002000
#define EMACC_BASE			0x01E22000
#define EMAC_BASE			0x01E23000
#define MDIO_BASE			0x01E24000
#define GPIOCON_BASE			0x01E26000
#define PSC1_BASE			0x01E27000
#define I2C1_BASE			0x01E28000
#define SYSCFG1_BASE			0x01E2C000
#define EDMA3_1CC0_BASE			0x01E30000
#define EDMA3_1TC0_BASE			0x01E38000
#define ECAP0_BASE			0x01F06000
#define ECAP1_BASE			0x01F07000
#define ECAP2_BASE			0x01F08000
#define TIMER2_BASE			0x01F0C000
#define TIMER3_BASE			0x01F0D000
#define OnChipRAM_BASE			0x80000000
#define OnChipRAM_SISE			0x00020000
#define DDR0_BASE			0xB0000000
#define ARMLocalROM_BASE		0xFFFD0000
#define ARMLocalROM_SIZE		0x00010000
#define AINTC_BASE			0xFFFEE000
#define ARMLocalRAM_BASE		0xFFFF0000
#define ARMLocalRAM_SIZE		0x00002000
